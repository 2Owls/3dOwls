/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three"
import React, { useEffect, useRef, useState } from "react"
import { useGLTF, useAnimations, PerspectiveCamera } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/owl_lisa.gltf')
  const { actions, mixer } = useAnimations(animations, group)
  const [hovered, set] = useState()

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 44.05, 0.01]} rotation={[0, 0, 0]}>
        <group   
          position={[40.87, -43.92, 0]}>
          
          <mesh
            name="owl"          
            castShadow
            receiveShadow
            geometry={nodes.owl.geometry}
            material={nodes.owl.material}
            position={[-40.76, 27.54, -3.49]}
            rotation={[0, 0, 0]} > 
            <meshStandardMaterial color="#E63946" />                 
          </mesh>
          <mesh
            name="calendar"   
            castShadow
            receiveShadow
            geometry={nodes.calendar.geometry}
            material={nodes.calendar.material}
            position={[-40.87, -0.13, -0.01]}
            rotation={[0, 0, 0]} >
            <meshStandardMaterial color="#E63946" />                
          </mesh>
          <mesh
            name="mug"             
            castShadow
            receiveShadow
            geometry={nodes.mug.geometry}
            material={nodes.mug.material}
            position={[-40.87, -0.13, -0.01]} >
            <meshStandardMaterial color="#E63946" />                
          </mesh>
          <mesh
            name="lamp"                
            castShadow
            receiveShadow
            geometry={nodes.lamp.geometry}
            material={nodes.lamp.material}
            position={[-40.87, -0.13, -0.01]} >
            <meshStandardMaterial color="#20A39E" />  
          </mesh>
          <mesh
            name="typewriter"                
            castShadow
            receiveShadow
            geometry={nodes.typewriter.geometry}
            material={nodes.typewriter.material}
            position={[-40.87, -0.13, -0.01]} >
            <meshStandardMaterial color="#20A39E" />               
          </mesh>
          <mesh
            name="desk"                
            castShadow
            receiveShadow
            geometry={nodes.desk.geometry}
            material={nodes.desk.material}
            position={[-40.78, 9.04, 0]} >
            <meshStandardMaterial color="#473b36" />                 
          </mesh>
          <mesh
            name="paper1"                
            castShadow
            receiveShadow
            geometry={nodes.paper1.geometry}
            material={nodes.paper1.material}
            position={[-36.66, 18.29, 67.41]}
            rotation={[0, Math.PI / 9, 0]} >
            <meshStandardMaterial color="#cdcdcd" />                 
          </mesh>
          <mesh
            name="paper"                
            castShadow
            receiveShadow
            geometry={nodes.paper.geometry}
            material={nodes.paper.material}
            position={[-35.4, 18.72, 67.19]}
            rotation={[0, 0.17, 0]} >
            <meshStandardMaterial color="#cdcdcd" />                 
          </mesh>
          <mesh
            name="paper2"                
            castShadow
            receiveShadow
            geometry={nodes.paper2.geometry}
            material={nodes.paper2.material}
            position={[-35.4, 19.15, 67.19]}
            rotation={[0, Math.PI / 9, 0]} >
            <meshStandardMaterial color="#cdcdcd" />                 
          </mesh>
          <mesh
            name="book_ho"                
            castShadow
            receiveShadow
            geometry={nodes.book_ho.geometry}
            material={nodes.book_ho.material}
            position={[-107.93, 45.27, -3.88]}
            rotation={[-Math.PI / 2, 0, -Math.PI / 3]} >
            <meshStandardMaterial color="#E63946" />                    
          </mesh>
          <mesh
            name="bookot"                
            castShadow
            receiveShadow
            geometry={nodes.bookot.geometry}
            material={nodes.bookot.material}
            position={[-107.93, 35.23, -3.88]}
            rotation={[-Math.PI / 2, 0, -1.4]} >
            <meshStandardMaterial color="#3b3b3b" />                   
          </mesh>
          <mesh
            name="cactus"                
            castShadow
            receiveShadow
            geometry={nodes.cactus.geometry}
            material={nodes.cactus.material}
            position={[-8.7, 55.15, -61.3]} >
            <meshStandardMaterial color="#20A39E" />                
          </mesh>
          <mesh
            name="cactus_bunch"                
            castShadow
            receiveShadow
            geometry={nodes.cactus_bunch.geometry}
            material={nodes.cactus_bunch.material}
            position={[-40.87, -0.13, -0.01]} >
            <meshStandardMaterial color="#20A39E" />                
          </mesh>
          <mesh
            name="cactus_bunch1"             
            castShadow
            receiveShadow
            geometry={nodes.cactus_bunch1.geometry}
            material={nodes.cactus_bunch1.material}
            position={[-40.87, -0.13, -0.01]} >
            <meshStandardMaterial color="#20A39E" />                
          </mesh>
          <mesh
            name="pen1"             
            castShadow
            receiveShadow
            geometry={nodes.pen1.geometry}
            material={nodes.pen1.material}
            position={[-40.87, -0.13, -0.01]}
            rotation={[0, 0, 0]} >
            <meshStandardMaterial color="#20A39E" />  
          </mesh>
          <mesh
            name="cactus_bunch"             
            castShadow
            receiveShadow
            geometry={nodes.pen.geometry}
            material={nodes.pen.material}
            position={[-40.87, -0.13, -0.01]}
            rotation={[0, 0, 0]} >
            <meshStandardMaterial color="#20A39E" />                
            </mesh>
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/owl_lisa.gltf')
